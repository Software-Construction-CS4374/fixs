<?xml version="1.0" encoding="UTF-8"?>
<pmd>
    <useProjectRuleSet>false</useProjectRuleSet>
    <ruleSetFile>.ruleset</ruleSetFile>
    <excludePatterns/>
    <includePatterns/>
    <rules>
        <rule>
            <name>ApexAssertionsShouldIncludeMessage</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>ApexUnitTestClassShouldHaveAsserts</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>ApexUnitTestMethodShouldHaveIsTestAnnotation</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>ApexUnitTestShouldNotUseSeeAllDataTrue</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidGlobalModifier</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidLogicInTrigger</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidReassigningParameters</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AvoidWithStatement</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>ConsistentReturn</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>DebugsShouldUseLoggingLevel</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>GlobalVariable</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>ScopeForInVariable</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>UnusedLocalVariable</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>UnusedMacroParameter</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>UseBaseWithParseInt</name>
            <ruleset>Best Practices</ruleset>
        </rule>
        <rule>
            <name>AssignmentInOperand</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AtLeastOneConstructor</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ClassNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ControlStatementBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>FieldDeclarationsShouldBeAtStart</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>FieldNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ForLoopsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ForLoopsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>FormalParameterNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>IfElseStmtsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>IfElseStmtsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>IfStmtsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>IfStmtsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>LocalVariableNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>LongVariable</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>MethodArgumentCouldBeFinal</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>MethodNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>NoElseReturn</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>OneDeclarationPerLine</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>PropertyNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>ShortVariable</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryBlock</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>UnnecessaryParentheses</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>UnreachableCode</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>UseConcatOnce</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>VariableNamingConventions</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>WhileLoopsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>WhileLoopsMustUseBraces</name>
            <ruleset>Code Style</ruleset>
        </rule>
        <rule>
            <name>AvoidCatchingGenericException</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>AvoidDeeplyNestedIfStmts</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ClassWithOnlyPrivateConstructorsShouldBeFinal</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CognitiveComplexity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CollapsibleIfStatements</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>CyclomaticComplexity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessiveClassLength</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessiveParameterList</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessivePublicCount</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ExcessiveTemplateLength</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ImmutableField</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>LawOfDemeter</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NcssConstructorCount</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NcssMethodCount</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NcssTypeCount</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NoInlineJavaScript</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NoInlineStyles</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>NPathComplexity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>StdCyclomaticComplexity</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooManyFields</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>TooManyMethods</name>
            <ruleset>Design</ruleset>
        </rule>
        <rule>
            <name>ApexDoc</name>
            <ruleset>Documentation</ruleset>
        </rule>
        <rule>
            <name>ApexCSRF</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidDirectAccessTriggerMap</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidHardcodingId</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidNonExistentAnnotations</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidTrailingComma</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyCatchBlock</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyForeachStmt</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyIfStmt</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyIfStmt</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyStatementBlock</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyTryOrFinallyBlock</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EmptyWhileStmt</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>EqualComparison</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>InaccessibleAuraEnabledGetter</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>InnaccurateNumericLiteral</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>MethodWithSameNameAsEnclosingClass</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>MistypedCDATASection</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>OverrideBothEqualsAndHashcode</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>TestMethodsMustBeInTestClasses</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>TO_DATEWithoutDateFormat</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>TO_DATE_TO_CHAR</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>TO_TIMESTAMPWithoutDateFormat</name>
            <ruleset>Error Prone</ruleset>
        </rule>
        <rule>
            <name>AvoidAxisNavigation</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>AvoidDebugStatements</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>AvoidDmlStatementsInLoops</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>AvoidSoqlInLoops</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>AvoidSoslInLoops</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>OperationWithLimitsInLoop</name>
            <ruleset>Performance</ruleset>
        </rule>
        <rule>
            <name>ApexBadCrypto</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexCRUDViolation</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexDangerousMethods</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexInsecureEndpoint</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexOpenRedirect</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexSharingViolations</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexSOQLInjection</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexSuggestUsingNamedCred</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexXSSFromEscapeFalse</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>ApexXSSFromURLParam</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>VfCsrf</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>VfHtmlStyleTagXss</name>
            <ruleset>Security</ruleset>
        </rule>
        <rule>
            <name>VfUnescapeEl</name>
            <ruleset>Security</ruleset>
        </rule>
    </rules>
    <includeDerivedFiles>false</includeDerivedFiles>
    <violationsAsErrors>true</violationsAsErrors>
    <fullBuildEnabled>true</fullBuildEnabled>
</pmd>
